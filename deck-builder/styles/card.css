pokemon-card {
    position: relative;
    aspect-ratio: var(--card-width)/var(--card-height);
    z-index: 0;
    transition: z-index var(--transition-time);
    /* background: linear-gradient(to bottom right, rgba(255,0,0,0.5), rgba(0,0,255,0.5)); */
}

pokemon-card.hovered-card {
    z-index: 1000;
    transition: z-index 0s;
}

.hidden-card {
    display: none;
}

.drag-image {
    position: absolute;
    width: calc(100% * 417/434);
    height: calc(100% * 589/606);
    left: calc(50% * 17/434);
    top: calc(50% * 17/606);
    background-size: 100% 100%;
    background-repeat: no-repeat;
    opacity: 1;
    border-radius: var(--card-border-radius);
}

.card-display {
    position: absolute;
    width: calc(100% * 417/434);
    height: calc(100% * 589/606);
    left: calc(50% * 17/434);
    top: calc(50% * 17/606);
    transform: none;
    will-change: width, height, left, top, transform;
    transition: width var(--transition-time), height var(--transition-time), top var(--transition-time), left var(--transition-time), transform var(--transition-time);
    pointer-events: none;
    /* background: linear-gradient(to bottom right, rgba(255,255,0,1), rgba(0,255,255,1)); */
}

.card-image {
    position: absolute;
    width: 100%;
    height: 100%;
    background-image: url(../images/placeholder.png);
    background-size: 100% 100%;
    box-shadow: 0 0 16px rgba(0,0,0,0.25);
    transition: box-shadow var(--transition-time), transform var(--transition-time);
    pointer-events: all;
}

.card-image * {
    position: absolute;
    width: 100%;
    height: 100%;
    object-fit: fill;
}

.card-image, .card-image * {
    border-radius: var(--card-border-radius);
}

.hd-card-image {
    position: absolute;
    width: 100%;
    height: 100%;
    opacity: 0;
    transition: opacity var(--transition-time);
}

.card-button-container {
    position: absolute;
    display: grid;
    grid-auto-rows: min-content;
    row-gap: 4px;

    width: 50%;
    top: 64px;
    border-radius: 16px;
    pointer-events: none;
    transition: width var(--transition-time), left var(--transition-time);
    will-change: width, left, border;
    z-index: -1;
    /* background-color: rgba(255,0,0,0.5); */
}
.card-button-container:not(.left) {
    left: 50%;
    justify-content: flex-end;
}
pokemon-card.hovered-card .card-button-container {
    pointer-events: all;
    width: calc(50% + 68px);
}
.card-button-container.left {
    left: -68px;
}
pokemon-card:not(.hovered-card) .card-button-container.left {
    left: 0;
}
pokemon-card:not(.hovered-card) .card-button-container button {
    font-size: 16px;
    width: 32px;
    height: 32px;
    border-radius: 8px;
    will-change: width, height, font-size, border-radius;
}

.card-add-button:before {
    content: '+';
}
.card-subtract-button:before {
    content: 'â€“';
}

pokemon-card.hovered-card .card-image {
    box-shadow: 0 0 64px black;
    transition: box-shadow var(--transition-time), transform 0s;
}

.card-image-container {
    width: 100%;
    height: 100%;
}
pokemon-card.hovered-card .card-image-container {
    animation: card-idle 5s ease-in-out infinite;
}

@keyframes card-idle {
    0% {
        transform: translateY(0%);
        animation-timing-function: ease-out;
    }
    25% {
        transform: translateY(1%);
        animation-timing-function: ease-in-out;
    }
    75% {
        transform: translateY(-1%);
        animation-timing-function: ease-in;
    }
}

.holofoil::after {
    display: var(--card-holo-display-low-res);
    content: "";
    width: 100%;
    height: 100%;
    background-size: cover;
    background-image: url(../images/holofoil-low-res.gif);
    mix-blend-mode: color-dodge;
    border-radius: var(--card-border-radius);
}

.holofoil-high-res::after {
    display: var(--card-holo-display-high-res);
    /* Animation from LEMAT WORKS https://www.behance.net/gallery/107545599/Twinkle-Night-18 */
    background-image: url(../images/holofoil-high-res.gif);
}

#focused:not(.hidden) ~ * .holofoil::after {
    display: none;
}

.card-glare {
    mix-blend-mode: overlay;
    opacity: 0;
    transition: opacity var(--transition-time);
}